name: Build GraalVM Image

on:
#  push:
#    branches:
#      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: sdkman/sdkman-action@main
        id: sdkman

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Cache SDKMAN! Java
        uses: actions/cache@v3
        with:
          path: ~/.sdkman/candidates/java
          key: graalvm-java-${{ runner.os }}-${{ hashFiles('.sdkmanrc') }}
          restore-keys: graalvm-java-${{ runner.os }}-

      - name: Define Docker Image Name
        run: |
          LOWERCASE_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/$LOWERCASE_REPO/testgraal-image:${{ github.sha }}"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Build Native Image with bootBuildImage
        run: |
          source "/home/runner/.sdkman/bin/sdkman-init.sh"
          ./gradlew bootBuildImage --imageName $IMAGE_NAME

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker push $IMAGE_NAME

      - name: Save Latest Tag as Artifact
        run: echo "${{ github.sha }}" > latest-tag.txt

      - uses: actions/upload-artifact@v3
        with:
          name: latest-tag
          path: latest-tag.txt
